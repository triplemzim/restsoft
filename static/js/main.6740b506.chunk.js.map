{"version":3,"sources":["pages/HomePage/Home.jsx","utils/Strings.js","utils/Constants.js","api/LambdaApi.js","sharedComponents/SimpleConfirmationDialog.jsx","pages/MenuManagement/MenuListViewComponent.jsx","pages/MenuManagement/MenuEntryFormComponent.jsx","pages/MenuManagement/MenuManagement.jsx","libs/contextLibs.js","pages/AuthUI/LoginPage.jsx","libs/ProtectedRoute.js","Router.js","sharedComponents/AppBarComponent.jsx","App.js","serviceWorker.js","config.js","index.js"],"names":["Home","props","state","Button","variant","color","component","Link","to","Component","Constants","LOGIN","HOME","MENU_MANAGEMENT","createMenuApi","getMenuApi","deleteMenuApi","params","API","post","SimpleConfirmationDialog","Dialog","open","onClose","handleClose","aria-labelledby","aria-describedby","DialogTitle","id","style","marginRight","title","DialogContent","DialogContentText","body","DialogActions","onClick","onConfirm","autoFocus","MenuListViewComponent","deleteMenuItem","a","console","log","selectedMenuCodeForDeletion","menu_code","setState","shouldUpdateMenuItems","alert","closeDeleteDialog","isOpenDeleteConfirmationDialog","handleDelete","TableContainer","Paper","className","Table","stickyHeader","aria-label","TableHead","TableRow","TableCell","align","TableBody","this","menuItems","map","row","index","key","name","category","price","IconButton","Delete","simpleTable","MenuEntryFormComponent","formInputNames","menuCode","submitForm","Object","freeze","event","inputName","target","value","noValidate","autoComplete","Grid","container","direction","justify","Item","TextField","required","label","onChange","onChangeInput","type","disabled","isButtonEnabled","MenuManagement","getMenuItems","result","alignItems","spacing","xs","Container","AppContext","createContext","Copyright","Typography","href","Date","getFullYear","LoginPage","onEmailChange","email","onPasswordChange","password","onSubmit","preventDefault","appContext","context","Auth","signIn","userHasAuthenticated","location","from","history","replace","message","isAuthenticated","classes","maxWidth","CssBaseline","paper","Avatar","avatar","form","margin","fullWidth","FormControlLabel","control","Checkbox","submit","item","Box","mt","contextType","withStyles","theme","display","flexDirection","backgroundColor","palette","secondary","main","width","marginTop","withTheme","ProtectedRoute","rest","render","pathname","Routes","exact","path","AppBarComponent","handleLogOut","signOut","root","AppBar","position","Toolbar","flexGrow","menuButton","App","authenticated","onLoad","currentSession","isAuthenticating","Provider","elevation","React","Boolean","window","hostname","match","REGION","URL","USER_POOL_ID","APP_CLIENT_ID","IDENTITY_POOL_ID","Amplify","configure","mandatorySignIn","region","config","userPoolId","identityPoolId","userPoolWebClientId","endpoints","endpoint","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.6740b506.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { GO_TO_CREATE_MENU } from \"../../utils/Strings\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          component={Link}\r\n          to=\"/menuManagement\"\r\n        >\r\n          {GO_TO_CREATE_MENU}\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","export const EMAIL = \"email\";\r\nexport const GO_TO_CREATE_MENU = \"Go to Create Menu\";\r\nexport const LOGOUT = \"Logout\";\r\nexport const RESTSOFT_ADMIN_PANEL = \"RestSoft Admin Panel\";\r\nexport const ADD_MENU_ITEM = \"Add Menu Item\";\r\nexport const MENU_CODE = \"Menu Code\";\r\nexport const NAME = \"Name\";\r\nexport const CATEGORY = \"Category\";\r\nexport const PRICE = \"Price\";\r\nexport const DELETE_CONFIRMATION_BODY = \"Are you sure?\";\r\nexport const DELETE_CONFIRMATION_TITLE = \"Delete Item\";\r\n","export const Constants = {\r\n  LINKS: {\r\n    LOGIN: \"/login\",\r\n    HOME: \"/home\",\r\n    MENU_MANAGEMENT: \"/menuManagement\",\r\n  },\r\n  SLASH: \"/\",\r\n  ENDPOINTS: {\r\n    createMenuApi: \"/create-menu\",\r\n    getMenuApi: \"/get-all-menu\",\r\n    deleteMenuApi: \"/delete-menu\",\r\n  },\r\n};\r\n","import { API } from \"aws-amplify\";\r\nimport { Constants } from \"../utils/Constants\";\r\n\r\nexport const createMenuApi = (params) => {\r\n  return API.post(\"webadmin\", Constants.ENDPOINTS.createMenuApi, params);\r\n};\r\nexport const getMenuApi = (params) => {\r\n  return API.post(\"webadmin\", Constants.ENDPOINTS.getMenuApi, params);\r\n};\r\nexport const deleteMenuApi = (params) => {\r\n  return API.post(\"webadmin\", Constants.ENDPOINTS.deleteMenuApi, params);\r\n};\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function SimpleConfirmationDialog(props) {\r\n  const onOkay = () => {\r\n    props.handleClose();\r\n    props.onConfirm();\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.handleClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\" style={{ marginRight: \"200px\" }}>\r\n        {props.title}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          {props.body}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={onOkay} color=\"primary\" autoFocus>\r\n          OK\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nSimpleConfirmationDialog.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  handleClose: PropTypes.func.isRequired,\r\n  title: PropTypes.string,\r\n  body: PropTypes.string,\r\n  onConfirm: PropTypes.func,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Delete } from \"@material-ui/icons\";\r\nimport \"./menuManagement.css\";\r\nimport {\r\n  CATEGORY,\r\n  DELETE_CONFIRMATION_BODY,\r\n  DELETE_CONFIRMATION_TITLE,\r\n  MENU_CODE,\r\n  NAME,\r\n  PRICE,\r\n} from \"../../utils/Strings\";\r\nimport { deleteMenuApi } from \"../../api/LambdaApi\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SimpleConfirmationDialog from \"../../sharedComponents/SimpleConfirmationDialog\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass MenuListViewComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpenDeleteConfirmationDialog: false,\r\n      selectedMenuCodeForDeletion: \"\",\r\n    };\r\n  }\r\n\r\n  deleteMenuItem = async () => {\r\n    console.log(\r\n      \"menuCode should be deleted\",\r\n      this.state.selectedMenuCodeForDeletion\r\n    );\r\n    const params = {\r\n      body: {\r\n        menu_code: this.state.selectedMenuCodeForDeletion,\r\n      },\r\n    };\r\n\r\n    try {\r\n      await deleteMenuApi(params);\r\n      this.setState({\r\n        selectedMenuCodeForDeletion: \"\",\r\n      });\r\n      this.props.shouldUpdateMenuItems();\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  };\r\n\r\n  closeDeleteDialog = () => {\r\n    this.setState({\r\n      isOpenDeleteConfirmationDialog: false,\r\n    });\r\n  };\r\n\r\n  handleDelete = (menu_code) => {\r\n    this.setState({\r\n      isOpenDeleteConfirmationDialog: true,\r\n      selectedMenuCodeForDeletion: menu_code,\r\n    });\r\n  };\r\n\r\n  simpleTable() {\r\n    return (\r\n      <div>\r\n        <TableContainer component={Paper} className=\"table-max-height\">\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead className=\"table-head\">\r\n              <TableRow>\r\n                <TableCell>{MENU_CODE}</TableCell>\r\n                <TableCell align=\"center\">{NAME}</TableCell>\r\n                <TableCell align=\"center\">{CATEGORY}</TableCell>\r\n                <TableCell align=\"right\">{PRICE}</TableCell>\r\n                <TableCell align=\"center\"></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.props.menuItems.map((row, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell align=\"left\"> {row.menu_code} </TableCell>\r\n                  <TableCell align=\"center\">{row.name}</TableCell>\r\n                  <TableCell align=\"center\">{row.category}</TableCell>\r\n                  <TableCell align=\"right\">{row.price}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <IconButton\r\n                      aria-label=\"delete\"\r\n                      component=\"span\"\r\n                      onClick={() => {\r\n                        this.handleDelete(row.menu_code);\r\n                      }}\r\n                    >\r\n                      <Delete />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <SimpleConfirmationDialog\r\n          open={this.state.isOpenDeleteConfirmationDialog}\r\n          handleClose={this.closeDeleteDialog}\r\n          title={DELETE_CONFIRMATION_TITLE}\r\n          body={DELETE_CONFIRMATION_BODY}\r\n          onConfirm={this.deleteMenuItem}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return <div>{this.simpleTable()}</div>;\r\n  }\r\n}\r\n\r\nMenuListViewComponent.propTypes = {\r\n  menuItems: PropTypes.array.isRequired,\r\n  shouldUpdateMenuItems: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default MenuListViewComponent;\r\n","import React, { Component } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  ADD_MENU_ITEM,\r\n  CATEGORY,\r\n  MENU_CODE,\r\n  NAME,\r\n  PRICE,\r\n} from \"../../utils/Strings\";\r\nimport { createMenuApi } from \"../../api/LambdaApi\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass MenuEntryFormComponent extends Component {\r\n  formInputNames = {\r\n    menuCode: \"menuCode\",\r\n    name: \"name\",\r\n    category: \"category\",\r\n    price: \"price\",\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    Object.freeze(this.formInputNames);\r\n\r\n    this.state = {\r\n      menuCode: \"\",\r\n      name: \"\",\r\n      category: \"\",\r\n      price: 0,\r\n    };\r\n  }\r\n\r\n  onChangeInput(event, inputName) {\r\n    switch (inputName) {\r\n      case this.formInputNames.menuCode:\r\n        this.setState({\r\n          menuCode: event.target.value,\r\n        });\r\n        break;\r\n      case this.formInputNames.name:\r\n        this.setState({\r\n          name: event.target.value,\r\n        });\r\n        break;\r\n      case this.formInputNames.category:\r\n        this.setState({\r\n          category: event.target.value,\r\n        });\r\n        break;\r\n      case this.formInputNames.price:\r\n        this.setState({\r\n          price: event.target.value,\r\n        });\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  submitForm = async () => {\r\n    const params = {\r\n      body: {\r\n        name: this.state.name,\r\n        menu_code: this.state.menuCode,\r\n        price: this.state.price,\r\n        category: this.state.category,\r\n      },\r\n    };\r\n    try {\r\n      await createMenuApi(params);\r\n      this.props.shouldUpdateMenuItems();\r\n      this.setState({\r\n        menuCode: \"\",\r\n      });\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n    }\r\n  };\r\n\r\n  isButtonEnabled() {\r\n    if (\r\n      this.state.menuCode !== \"\" &&\r\n      this.state.name !== \"\" &&\r\n      this.state.price !== 0\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"menu-item-header\">{ADD_MENU_ITEM}</div>\r\n        <form noValidate autoComplete=\"off\">\r\n          <Grid container direction=\"column\" justify=\"space-evenly\">\r\n            <Grid Item>\r\n              <TextField\r\n                className=\"text-field\"\r\n                required\r\n                id=\"standard-basic\"\r\n                label={MENU_CODE}\r\n                value={this.state.menuCode}\r\n                onChange={(event) =>\r\n                  this.onChangeInput(event, this.formInputNames.menuCode)\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid Item>\r\n              <TextField\r\n                className=\"text-field\"\r\n                required\r\n                id=\"standard-basic\"\r\n                label={NAME}\r\n                onChange={(event) =>\r\n                  this.onChangeInput(event, this.formInputNames.name)\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid Item>\r\n              <TextField\r\n                className=\"text-field\"\r\n                id=\"standard-basic\"\r\n                label={CATEGORY}\r\n                onChange={(event) =>\r\n                  this.onChangeInput(event, this.formInputNames.category)\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid Item>\r\n              <TextField\r\n                className=\"text-field\"\r\n                required\r\n                id=\"standard-basic\"\r\n                label={PRICE}\r\n                type=\"number\"\r\n                onChange={(event) =>\r\n                  this.onChangeInput(event, this.formInputNames.price)\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid Item>\r\n              <div className=\"add-menu-button\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={this.submitForm}\r\n                  disabled={this.isButtonEnabled()}\r\n                >\r\n                  {ADD_MENU_ITEM}\r\n                </Button>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMenuEntryFormComponent.propTypes = {\r\n  shouldUpdateMenuItems: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default MenuEntryFormComponent;\r\n","import React, { Component, Fragment } from \"react\";\r\n// import Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport MenuListViewComponent from \"./MenuListViewComponent\";\r\nimport MenuEntryFormComponent from \"./MenuEntryFormComponent\";\r\nimport \"./menuManagement.css\";\r\nimport { getMenuApi } from \"../../api/LambdaApi\";\r\n\r\nclass MenuManagement extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      menuItems: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getMenuItems();\r\n  }\r\n\r\n  getMenuItems = async () => {\r\n    const params = {};\r\n    try {\r\n      const result = await getMenuApi(params);\r\n      console.log(\"menuItems\", result);\r\n      this.setState({\r\n        menuItems: result,\r\n      });\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n\r\n    // const dummyData = [\r\n    //   this.createData(\"01\", \"Burger\", \"FastFood\", 3.5),\r\n    //   this.createData(\"01\", \"Burger\", \"FastFood\", 3.5),\r\n    //   this.createData(\"01\", \"Burger\", \"FastFood\", 3.5),\r\n    // ];\r\n    //\r\n    // this.setState({\r\n    //   menuItems: dummyData,\r\n    // });\r\n  };\r\n\r\n  createData(menu_code, name, category, price) {\r\n    return { menu_code, name, category, price };\r\n  }\r\n\r\n  shouldUpdateMenuItems = () => {\r\n    this.getMenuItems();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-between\"\r\n          alignItems=\"center\"\r\n          spacing={1}\r\n          className=\"full-height\"\r\n        >\r\n          <Grid Item xs={5}>\r\n            <Container className=\"basic-margin-padding\">\r\n              <MenuEntryFormComponent\r\n                shouldUpdateMenuItems={this.shouldUpdateMenuItems}\r\n              />\r\n            </Container>\r\n          </Grid>\r\n          <Grid Item xs={7}>\r\n            <Container className=\"basic-margin-padding\">\r\n              <MenuListViewComponent\r\n                menuItems={this.state.menuItems}\r\n                shouldUpdateMenuItems={this.shouldUpdateMenuItems}\r\n              />\r\n            </Container>\r\n          </Grid>\r\n        </Grid>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MenuManagement;\r\n","import { createContext } from \"react\";\r\n\r\nconst AppContext = createContext();\r\n\r\nexport default AppContext;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport AppContext from \"../../libs/contextLibs\";\r\nimport { Constants } from \"../../utils/Constants\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"\">\r\n        RestSoft\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst styles = (theme) => ({\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(4),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n});\r\n\r\nclass LoginPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n\r\n  onEmailChange = (event) => {\r\n    this.setState({\r\n      email: event.target.value,\r\n    });\r\n  };\r\n\r\n  onPasswordChange = (event) => {\r\n    this.setState({\r\n      password: event.target.value,\r\n    });\r\n  };\r\n\r\n  componentWillMount() {\r\n    const appContext = this.context;\r\n    if (appContext.isAuthenticated) {\r\n      this.props.history.replace(Constants.LINKS.HOME);\r\n    }\r\n  }\r\n\r\n  onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    console.log(\r\n      \"this function is running\",\r\n      this.state.email,\r\n      this.state.password\r\n    );\r\n    const appContext = this.context;\r\n\r\n    try {\r\n      await Auth.signIn(this.state.email, this.state.password);\r\n      appContext.userHasAuthenticated(true);\r\n      const { from } = this.props.location.state || {\r\n        from: Constants.LINKS.HOME,\r\n      };\r\n      this.props.history.replace(from);\r\n    } catch (e) {\r\n      alert(e.message);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              value={this.state.email}\r\n              onChange={this.onEmailChange}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={this.state.password}\r\n              autoComplete=\"current-password\"\r\n              onChange={this.onPasswordChange}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={this.onSubmit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <Box mt={8}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nLoginPage.contextType = AppContext;\r\n\r\nexport default withStyles(styles, { withTheme: true })(LoginPage);\r\n","import React, { Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport AppContext from \"./contextLibs\";\r\nimport { Constants } from \"../utils/Constants\";\r\n\r\nclass ProtectedRoute extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const appContext = this.context;\r\n    const { component: Component, ...rest } = this.props;\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={(props) =>\r\n          appContext.isAuthenticated === true ? (\r\n            <Component {...props} />\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: Constants.LINKS.LOGIN,\r\n                state: {\r\n                  from: props.location,\r\n                },\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nProtectedRoute.contextType = AppContext;\r\n\r\nexport default ProtectedRoute;\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Home from \"./pages/HomePage/Home\";\r\nimport MenuManagement from \"./pages/MenuManagement/MenuManagement\";\r\nimport LoginPage from \"./pages/AuthUI/LoginPage\";\r\nimport ProtectedRoute from \"./libs/ProtectedRoute\";\r\nimport { Constants } from \"./utils/Constants\";\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <Switch>\r\n      <Redirect exact from={Constants.SLASH} to={Constants.LINKS.LOGIN} />\r\n      <Route path={Constants.LINKS.LOGIN} component={LoginPage} />\r\n      <ProtectedRoute path={Constants.LINKS.HOME} component={Home} />\r\n      <ProtectedRoute\r\n        path={Constants.LINKS.MENU_MANAGEMENT}\r\n        component={MenuManagement}\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\n// import Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\nimport AppContext from \"../libs/contextLibs\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Constants } from \"../utils/Constants\";\r\nimport { LOGOUT, RESTSOFT_ADMIN_PANEL } from \"../utils/Strings\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nclass AppBarComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  handleLogOut = async () => {\r\n    const { userHasAuthenticated } = this.context;\r\n    await Auth.signOut();\r\n    userHasAuthenticated(false);\r\n  };\r\n\r\n  render() {\r\n    const { isAuthenticated } = this.context;\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            {/*<IconButton*/}\r\n            {/*    edge=\"start\"*/}\r\n            {/*    className={classes.menuButton}*/}\r\n            {/*    color=\"inherit\"*/}\r\n            {/*    aria-label=\"menu\"*/}\r\n            {/*>*/}\r\n            {/*    <MenuIcon/>*/}\r\n            {/*</IconButton>*/}\r\n            <Button component={Link} to={Constants.LINKS.HOME} color=\"inherit\">\r\n              {RESTSOFT_ADMIN_PANEL}\r\n            </Button>\r\n            <div className={classes.title}></div>\r\n            {isAuthenticated ? (\r\n              <Button color=\"inherit\" onClick={this.handleLogOut}>\r\n                {LOGOUT}\r\n              </Button>\r\n            ) : null}\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAppBarComponent.contextType = AppContext;\r\n\r\nexport default withStyles(styles, { withTheme: true })(AppBarComponent);\r\n","import React, { Fragment } from \"react\";\r\nimport Routes from \"./Router\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport AppBarComponent from \"./sharedComponents/AppBarComponent\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AppContext from \"./libs/contextLibs\";\r\nimport { Auth } from \"aws-amplify\";\r\n\r\nimport \"./App.css\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isAuthenticated: false,\r\n      isAuthenticating: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.onLoad();\r\n  }\r\n\r\n  userHasAuthenticated = (authenticated) => {\r\n    this.setState({\r\n      isAuthenticated: authenticated,\r\n    });\r\n  };\r\n\r\n  onLoad = async () => {\r\n    try {\r\n      await Auth.currentSession();\r\n      this.userHasAuthenticated(true);\r\n      console.log(\"onLoad success\");\r\n    } catch (e) {\r\n      if (e !== \"No current user\") {\r\n        alert(e);\r\n        this.userHasAuthenticated(false);\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      isAuthenticating: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      !this.state.isAuthenticating && (\r\n        <Box>\r\n          <AppContext.Provider\r\n            value={{\r\n              isAuthenticated: this.state.isAuthenticated,\r\n              userHasAuthenticated: this.userHasAuthenticated,\r\n            }}\r\n          >\r\n            {this.state.isAuthenticated ? (\r\n              <Fragment>\r\n                <AppBarComponent />\r\n                <Box className=\"root-container\">\r\n                  <Paper elevation={3} className=\"root-paper\">\r\n                    <Routes />\r\n                  </Paper>\r\n                </Box>\r\n              </Fragment>\r\n            ) : (\r\n              <Box className=\"sign-in-root-container\">\r\n                <Paper elevation={3} className=\"sign-in-root-paper\">\r\n                  <Routes />\r\n                </Paper>\r\n              </Box>\r\n            )}\r\n          </AppContext.Provider>\r\n        </Box>\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export default {\r\n  apiGateway: {\r\n    REGION: \"ap-southeast-1\",\r\n    URL:\r\n      \"https://10i3qjmcvg.execute-api.ap-southeast-1.amazonaws.com/dev-muhim\",\r\n  },\r\n  cognito: {\r\n    REGION: \"ap-southeast-1\",\r\n    USER_POOL_ID: \"ap-southeast-1_9J0gInDEe\",\r\n    APP_CLIENT_ID: \"78p7gt6ha1ave9isfe7otl0f68\",\r\n    IDENTITY_POOL_ID: \"ap-southeast-1:5d85bb85-89b4-42eb-95af-ef9fc37405a1\",\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Amplify } from \"aws-amplify\";\r\nimport config from \"./config\";\r\n\r\nAmplify.configure({\r\n  Auth: {\r\n    mandatorySignIn: true,\r\n    region: config.cognito.REGION,\r\n    userPoolId: config.cognito.USER_POOL_ID,\r\n    identityPoolId: config.cognito.IDENTITY_POOL_ID,\r\n    userPoolWebClientId: config.cognito.APP_CLIENT_ID,\r\n  },\r\n  // Storage: {\r\n  //     region: config.s3.REGION,\r\n  //     bucket: config.s3.BUCKET,\r\n  //     identityPoolId: config.cognito.IDENTITY_POOL_ID\r\n  // },\r\n  API: {\r\n    endpoints: [\r\n      {\r\n        name: \"webadmin\",\r\n        endpoint: config.apiGateway.URL,\r\n        region: config.apiGateway.REGION,\r\n      },\r\n    ],\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <Router basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}